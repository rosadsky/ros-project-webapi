{
	"info": {
		"_postman_id": "ambulance-api-collection",
		"name": "Hospital Ambulances API",
		"description": "Complete Postman collection for Hospital Ambulances API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has correct status\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"    pm.expect(jsonData.service).to.eql(\"hospital-spaces-api\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/health",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"health"
					]
				},
				"description": "Health check endpoint to verify API is running"
			},
			"response": []
		},
		{
			"name": "Create Ambulance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response has required fields\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('ambulance_id');",
							"    pm.expect(jsonData).to.have.property('name');",
							"    pm.expect(jsonData).to.have.property('type');",
							"    pm.expect(jsonData).to.have.property('location');",
							"    pm.expect(jsonData).to.have.property('status');",
							"    pm.expect(jsonData).to.have.property('created_at');",
							"    pm.expect(jsonData).to.have.property('updated_at');",
							"});",
							"",
							"pm.test(\"Default status is available\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"available\");",
							"});",
							"",
							"// Store ambulance_id for use in other requests",
							"if (pm.response.code === 201) {",
							"    const jsonData = pm.response.json();",
							"    pm.environment.set(\"ambulance_id\", jsonData.ambulance_id);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Ambulance Unit 1\",\n  \"type\": \"emergency\",\n  \"location\": \"Main Hospital Entrance\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/ambulances",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"ambulances"
					]
				},
				"description": "Create a new ambulance with required fields: name, type, and location"
			},
			"response": [
				{
					"name": "Successful Creation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Ambulance Unit 1\",\n  \"type\": \"emergency\",\n  \"location\": \"Main Hospital Entrance\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/ambulances",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambulances"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"507f1f77bcf86cd799439011\",\n  \"ambulance_id\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"name\": \"Ambulance Unit 1\",\n  \"type\": \"emergency\",\n  \"location\": \"Main Hospital Entrance\",\n  \"status\": \"available\",\n  \"created_at\": \"2024-01-15T10:30:00Z\",\n  \"updated_at\": \"2024-01-15T10:30:00Z\"\n}"
				}
			]
		},
		{
			"name": "Create Ambulance - ICU Type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Ambulance type is ICU\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.type).to.eql(\"icu\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"ICU Ambulance Unit 2\",\n  \"type\": \"icu\",\n  \"location\": \"Emergency Department\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/ambulances",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"ambulances"
					]
				},
				"description": "Create an ICU type ambulance"
			},
			"response": []
		},
		{
			"name": "Create Ambulance - Missing Required Fields",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Error message is present\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('error');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Incomplete Ambulance\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/ambulances",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"ambulances"
					]
				},
				"description": "Test validation by sending incomplete data (missing type and location)"
			},
			"response": []
		},
		{
			"name": "Get All Ambulances",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is an array\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array');",
							"});",
							"",
							"pm.test(\"Each ambulance has required fields\", function () {",
							"    const jsonData = pm.response.json();",
							"    if (jsonData.length > 0) {",
							"        jsonData.forEach(function(ambulance) {",
							"            pm.expect(ambulance).to.have.property('ambulance_id');",
							"            pm.expect(ambulance).to.have.property('name');",
							"            pm.expect(ambulance).to.have.property('type');",
							"            pm.expect(ambulance).to.have.property('location');",
							"            pm.expect(ambulance).to.have.property('status');",
							"        });",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/ambulances",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"ambulances"
					]
				},
				"description": "Retrieve all ambulances in the system"
			},
			"response": [
				{
					"name": "Successful Retrieval",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/ambulances",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambulances"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": \"507f1f77bcf86cd799439011\",\n    \"ambulance_id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"name\": \"Ambulance Unit 1\",\n    \"type\": \"emergency\",\n    \"location\": \"Main Hospital Entrance\",\n    \"status\": \"available\",\n    \"created_at\": \"2024-01-15T10:30:00Z\",\n    \"updated_at\": \"2024-01-15T10:30:00Z\"\n  },\n  {\n    \"id\": \"507f1f77bcf86cd799439012\",\n    \"ambulance_id\": \"123e4567-e89b-12d3-a456-426614174001\",\n    \"name\": \"ICU Ambulance Unit 2\",\n    \"type\": \"icu\",\n    \"location\": \"Emergency Department\",\n    \"status\": \"available\",\n    \"created_at\": \"2024-01-15T10:35:00Z\",\n    \"updated_at\": \"2024-01-15T10:35:00Z\"\n  }\n]"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Pre-request script that runs before each request",
					"console.log('Making request to: ' + pm.request.url.toString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script that runs after each request",
					"pm.test(\"Response time is less than 5000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test(\"Content-Type is application/json\", function () {",
					"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "ambulance_id",
			"value": "",
			"type": "string"
		}
	]
} 